public class QueueCircural {
    static class Queue{
        static int  arr[];
        static int rear;
        static int size;
        static int front;
        Queue (int n ){
            arr = new int[n];
            size = n;
            rear = -1;
            front = -1;
        }
        public static boolean  isEmpty(){
            return rear ==-1 && front ==-1;
        }
        public  static boolean isFull(){
            return (rear+1)%size == front;
        }
        public static void add(int data){
            if (isFull()){
                System.out.println("Queue is empty");
                return ;
            }
            if (front ==-1){
                front = 0;
            }
            rear = (rear+1)%size;
            arr[rear] = data;
        }
        public static int remove(){
            if (isEmpty()){
                System.out.println("Queue is empty");
                return -1;

            }
            int result = arr[front];

            if (rear == front){
                rear = front = -1;

            }else {
                front = (front+1)%size;
            }
            return result;
        }
        public static int peek(){
            if (isEmpty()){
                return -1;
            }
            return arr[front];
        }

    }
    public static void main(String[] args) {
        Queue Q = new Queue(4);
        Q.add(1);


        Q.add(2);
        Q.add(3);
        System.out.println(Q.remove());
        Q.add(4);
        System.out.println(Q.remove());
        Q.add(5);
        while(!Q.isEmpty()){
            System.out.println(Q.peek());
            Q.remove();
        }

    }
}
